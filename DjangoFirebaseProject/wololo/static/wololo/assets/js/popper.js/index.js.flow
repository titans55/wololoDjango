declare module 'popper.js' ***REMOVED***
  declare type Position = 'top' | 'right' | 'bottom' | 'left';
  declare type Placement =
    | 'auto-start'
    | 'auto'
    | 'auto-end'
    | 'top-start'
    | 'top'
    | 'top-end'
    | 'right-start'
    | 'right'
    | 'right-end'
    | 'bottom-end'
    | 'bottom'
    | 'bottom-start'
    | 'left-end'
    | 'left'
    | 'left-start';

  declare type Offset = ***REMOVED***
    top: number,
    left: number,
    width: number,
    height: number,
    position: Position,
  ***REMOVED***;

  declare type Boundary = 'scrollParent' | 'viewport' | 'window';

  declare type Behavior = 'flip' | 'clockwise' | 'counterclockwise';

  declare type Data = ***REMOVED***
    instance: Popper,
    placement: Placement,
    originalPlacement: Placement,
    flipped: boolean,
    hide: boolean,
    arrowElement: Element,
    styles: CSSStyleDeclaration,
    arrowStyles: CSSStyleDeclaration,
    boundaries: Object,
    offsets: ***REMOVED***
      popper: Offset,
      reference: Offset,
      arrow: ***REMOVED***
        top: number,
        left: number,
      ***REMOVED***,
    ***REMOVED***,
  ***REMOVED***;

  declare type ModifierFn = (data: Data, options: Object) => Data;

  declare type BaseModifier = ***REMOVED***
    order?: number,
    enabled?: boolean,
    fn?: ModifierFn,
  ***REMOVED***;

  declare type Modifiers = ***REMOVED***
    shift?: BaseModifier,
    offset?: BaseModifier & ***REMOVED***
      offset?: number | string,
    ***REMOVED***,
    preventOverflow?: BaseModifier & ***REMOVED***
      priority?: Position[],
      padding?: number,
      boundariesElement?: Boundary | Element,
      escapeWithReference?: boolean,
    ***REMOVED***,
    keepTogether?: BaseModifier,
    arrow?: BaseModifier & ***REMOVED***
      element?: string | Element | null,
    ***REMOVED***,
    flip?: BaseModifier & ***REMOVED***
      behavior?: Behavior | Position[],
      padding?: number,
      boundariesElement?: Boundary | Element,
    ***REMOVED***,
    inner?: BaseModifier,
    hide?: BaseModifier,
    applyStyle?: BaseModifier & ***REMOVED***
      onLoad?: Function,
      gpuAcceleration?: boolean,
    ***REMOVED***,
    computeStyle?: BaseModifier & ***REMOVED***
      gpuAcceleration?: boolean,
      x?: 'bottom' | 'top',
      y?: 'left' | 'right',
    ***REMOVED***,

    [name: string]: (BaseModifier & ***REMOVED*** [string]: * ***REMOVED***) | null,
  ***REMOVED***;

  declare type Options = ***REMOVED***
    placement?: Placement,
    positionFixed?: boolean,
    eventsEnabled?: boolean,
    modifiers?: Modifiers,
    removeOnDestroy?: boolean,

    onCreate?: (data: Data) => void,

    onUpdate?: (data: Data) => void,
  ***REMOVED***;

  declare var placements: Placement;

  declare type ReferenceObject = ***REMOVED***
    +clientHeight: number,
    +clientWidth: number,

    getBoundingClientRect():
      | ClientRect
      | ***REMOVED***
          width: number,
          height: number,
          top: number,
          right: number,
          bottom: number,
          left: number,
        ***REMOVED***,
  ***REMOVED***;

  declare type Instance = ***REMOVED***
    destroy: () => void,
    scheduleUpdate: () => void,
    update: () => void,
    enableEventListeners: () => void,
    disableEventListeners: () => void,
  ***REMOVED***;

  declare class Popper ***REMOVED***
    static placements: Placement;

    constructor(
      reference: Element | ReferenceObject,
      popper: Element,
      options?: Options
    ): Instance;
  ***REMOVED***

  declare module.exports: Class<Popper>;
***REMOVED***
