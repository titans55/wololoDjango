***REMOVED***"version":3,"file":"popper-utils.min.js","sources":["../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/isIE.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getFixedPositionOffsetParent.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/getOffsetRect.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getSupportedPropertyName.js","../../src/utils/isFunction.js","../../src/utils/isModifierEnabled.js","../../src/utils/isModifierRequired.js","../../src/utils/isNumeric.js","../../src/utils/getWindow.js","../../src/utils/removeEventListeners.js","../../src/utils/runModifiers.js","../../src/utils/setAttributes.js","../../src/utils/setStyles.js","../../src/utils/setupEventListeners.js","../../src/utils/debounce.js","../../src/utils/isBrowser.js","../../src/utils/index.js"],"sourcesContent":["/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Eement***REMOVED*** element\n * @argument ***REMOVED***String***REMOVED*** property\n */\nexport default function getStyleComputedProperty(element, property) ***REMOVED***\n  if (element.nodeType !== 1) ***REMOVED***\n    return [];\n  ***REMOVED***\n  // NOTE: 1 DOM access here\n  const css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n***REMOVED***\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Element***REMOVED*** parent\n */\nexport default function getParentNode(element) ***REMOVED***\n  if (element.nodeName === 'HTML') ***REMOVED***\n    return element;\n  ***REMOVED***\n  return element.parentNode || element.host;\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Element***REMOVED*** scroll parent\n */\nexport default function getScrollParent(element) ***REMOVED***\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) ***REMOVED***\n    return document.body\n  ***REMOVED***\n\n  switch (element.nodeName) ***REMOVED***\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  ***REMOVED***\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const ***REMOVED*** overflow, overflowX, overflowY ***REMOVED*** = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) ***REMOVED***\n    return element;\n  ***REMOVED***\n\n  return getScrollParent(getParentNode(element));\n***REMOVED***\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Number***REMOVED*** version to check\n * @returns ***REMOVED***Boolean***REMOVED*** isIE\n */\nexport default function isIE(version) ***REMOVED***\n  if (version === 11) ***REMOVED***\n    return isIE11;\n  ***REMOVED***\n  if (version === 10) ***REMOVED***\n    return isIE10;\n  ***REMOVED***\n  return isIE11 || isIE10;\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Element***REMOVED*** offset parent\n */\nexport default function getOffsetParent(element) ***REMOVED***\n  if (!element) ***REMOVED***\n    return document.documentElement;\n  ***REMOVED***\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) ***REMOVED***\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  ***REMOVED***\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') ***REMOVED***\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  ***REMOVED***\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) ***REMOVED***\n    return getOffsetParent(offsetParent);\n  ***REMOVED***\n\n  return offsetParent;\n***REMOVED***\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) ***REMOVED***\n  const ***REMOVED*** nodeName ***REMOVED*** = element;\n  if (nodeName === 'BODY') ***REMOVED***\n    return false;\n  ***REMOVED***\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n***REMOVED***\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** node\n * @returns ***REMOVED***Element***REMOVED*** root node\n */\nexport default function getRoot(node) ***REMOVED***\n  if (node.parentNode !== null) ***REMOVED***\n    return getRoot(node.parentNode);\n  ***REMOVED***\n\n  return node;\n***REMOVED***\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element1\n * @argument ***REMOVED***Element***REMOVED*** element2\n * @returns ***REMOVED***Element***REMOVED*** common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) ***REMOVED***\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) ***REMOVED***\n    return document.documentElement;\n  ***REMOVED***\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const ***REMOVED*** commonAncestorContainer ***REMOVED*** = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) ***REMOVED***\n    if (isOffsetContainer(commonAncestorContainer)) ***REMOVED***\n      return commonAncestorContainer;\n    ***REMOVED***\n\n    return getOffsetParent(commonAncestorContainer);\n  ***REMOVED***\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) ***REMOVED***\n    return findCommonOffsetParent(element1root.host, element2);\n  ***REMOVED*** else ***REMOVED***\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  ***REMOVED***\n***REMOVED***\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @argument ***REMOVED***String***REMOVED*** side `top` or `left`\n * @returns ***REMOVED***number***REMOVED*** amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') ***REMOVED***\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') ***REMOVED***\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  ***REMOVED***\n\n  return element[upperSide];\n***REMOVED***\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Object***REMOVED*** rect - Rect object you want to change\n * @param ***REMOVED***HTMLElement***REMOVED*** element - The element from the function reads the scroll values\n * @param ***REMOVED***Boolean***REMOVED*** subtract - set to true if you want to subtract the scroll values\n * @return ***REMOVED***Object***REMOVED*** rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) ***REMOVED***\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n***REMOVED***\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***CSSStyleDeclaration***REMOVED*** styles\n * Result of `getStyleComputedProperty` on the given element\n * @param ***REMOVED***String***REMOVED*** axis - `x` or `y`\n * @return ***REMOVED***number***REMOVED*** borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) ***REMOVED***\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border$***REMOVED***sideA***REMOVED***Width`], 10) +\n    parseFloat(styles[`border$***REMOVED***sideB***REMOVED***Width`], 10)\n  );\n***REMOVED***\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) ***REMOVED***\n  return Math.max(\n    body[`offset$***REMOVED***axis***REMOVED***`],\n    body[`scroll$***REMOVED***axis***REMOVED***`],\n    html[`client$***REMOVED***axis***REMOVED***`],\n    html[`offset$***REMOVED***axis***REMOVED***`],\n    html[`scroll$***REMOVED***axis***REMOVED***`],\n    isIE(10)\n      ? (parseInt(html[`offset$***REMOVED***axis***REMOVED***`]) + \n      parseInt(computedStyle[`margin$***REMOVED***axis === 'Height' ? 'Top' : 'Left'***REMOVED***`]) + \n      parseInt(computedStyle[`margin$***REMOVED***axis === 'Height' ? 'Bottom' : 'Right'***REMOVED***`]))\n    : 0 \n  );\n***REMOVED***\n\nexport default function getWindowSizes(document) ***REMOVED***\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return ***REMOVED***\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  ***REMOVED***;\n***REMOVED***\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Object***REMOVED*** offsets\n * @returns ***REMOVED***Object***REMOVED*** ClientRect like output\n */\nexport default function getClientRect(offsets) ***REMOVED***\n  return ***REMOVED***\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  ***REMOVED***;\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***HTMLElement***REMOVED*** element\n * @return ***REMOVED***Object***REMOVED*** client rect\n */\nexport default function getBoundingClientRect(element) ***REMOVED***\n  let rect = ***REMOVED******REMOVED***;\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try ***REMOVED***\n    if (isIE(10)) ***REMOVED***\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    ***REMOVED***\n    else ***REMOVED***\n      rect = element.getBoundingClientRect();\n    ***REMOVED***\n  ***REMOVED***\n  catch(e)***REMOVED******REMOVED***\n\n  const result = ***REMOVED***\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  ***REMOVED***;\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : ***REMOVED******REMOVED***;\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) ***REMOVED***\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  ***REMOVED***\n\n  return getClientRect(result);\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) ***REMOVED***\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) ***REMOVED***\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  ***REMOVED***\n  let offsets = getClientRect(***REMOVED***\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  ***REMOVED***);\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) ***REMOVED***\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  ***REMOVED***\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) ***REMOVED***\n    offsets = includeScroll(offsets, parent);\n  ***REMOVED***\n\n  return offsets;\n***REMOVED***\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) ***REMOVED***\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = ***REMOVED***\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  ***REMOVED***;\n\n  return getClientRect(offset);\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @argument ***REMOVED***Element***REMOVED*** customContainer\n * @returns ***REMOVED***Boolean***REMOVED*** answer to \"isFixed?\"\n */\nexport default function isFixed(element) ***REMOVED***\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') ***REMOVED***\n    return false;\n  ***REMOVED***\n  if (getStyleComputedProperty(element, 'position') === 'fixed') ***REMOVED***\n    return true;\n  ***REMOVED***\n  return isFixed(getParentNode(element));\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Element***REMOVED*** first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) ***REMOVED***\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) ***REMOVED***\n    return document.documentElement;\n  ***REMOVED***\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') ***REMOVED***\n    el = el.parentElement;\n  ***REMOVED***\n  return el || document.documentElement;\n\n***REMOVED***\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***HTMLElement***REMOVED*** popper\n * @param ***REMOVED***HTMLElement***REMOVED*** reference\n * @param ***REMOVED***number***REMOVED*** padding\n * @param ***REMOVED***HTMLElement***REMOVED*** boundariesElement - Element used to define the boundaries\n * @param ***REMOVED***Boolean***REMOVED*** fixedPosition - Is in fixed position mode\n * @returns ***REMOVED***Object***REMOVED*** Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) ***REMOVED***\n  // NOTE: 1 DOM access here\n\n  let boundaries = ***REMOVED*** top: 0, left: 0 ***REMOVED***;\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) ***REMOVED***\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  ***REMOVED***\n\n  else ***REMOVED***\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') ***REMOVED***\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') ***REMOVED***\n        boundariesNode = popper.ownerDocument.documentElement;\n      ***REMOVED***\n    ***REMOVED*** else if (boundariesElement === 'window') ***REMOVED***\n      boundariesNode = popper.ownerDocument.documentElement;\n    ***REMOVED*** else ***REMOVED***\n      boundariesNode = boundariesElement;\n    ***REMOVED***\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) ***REMOVED***\n      const ***REMOVED*** height, width ***REMOVED*** = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    ***REMOVED*** else ***REMOVED***\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    ***REMOVED***\n  ***REMOVED***\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n***REMOVED***\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea(***REMOVED*** width, height ***REMOVED***) ***REMOVED***\n  return width * height;\n***REMOVED***\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by update method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) ***REMOVED***\n  if (placement.indexOf('auto') === -1) ***REMOVED***\n    return placement;\n  ***REMOVED***\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = ***REMOVED***\n    top: ***REMOVED***\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    ***REMOVED***,\n    right: ***REMOVED***\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    ***REMOVED***,\n    bottom: ***REMOVED***\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    ***REMOVED***,\n    left: ***REMOVED***\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    ***REMOVED***,\n  ***REMOVED***;\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => (***REMOVED***\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    ***REMOVED***))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    (***REMOVED*** width, height ***REMOVED***) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-$***REMOVED***variation***REMOVED***` : '');\n***REMOVED***\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Array***REMOVED*** arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) ***REMOVED***\n  // use native find if supported\n  if (Array.prototype.find) ***REMOVED***\n    return arr.find(check);\n  ***REMOVED***\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n***REMOVED***\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Array***REMOVED*** arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) ***REMOVED***\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) ***REMOVED***\n    return arr.findIndex(cur => cur[prop] === value);\n  ***REMOVED***\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n***REMOVED***\n","import getWindowSizes from './getWindowSizes';\nimport getClientRect from './getClientRect';\n\n/**\n * Get the position of the given element, relative to its offset parent\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Element***REMOVED*** element\n * @return ***REMOVED***Object***REMOVED*** position - Coordinates of the element and its `scrollTop`\n */\nexport default function getOffsetRect(element) ***REMOVED***\n  let elementRect;\n  if (element.nodeName === 'HTML') ***REMOVED***\n    const ***REMOVED*** width, height ***REMOVED*** = getWindowSizes(element.ownerDocument);\n    elementRect = ***REMOVED***\n      width,\n      height,\n      left: 0,\n      top: 0,\n    ***REMOVED***;\n  ***REMOVED*** else ***REMOVED***\n    elementRect = ***REMOVED***\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n      left: element.offsetLeft,\n      top: element.offsetTop,\n    ***REMOVED***;\n  ***REMOVED***\n\n  // position\n  return getClientRect(elementRect);\n***REMOVED***\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Object***REMOVED*** object containing width and height properties\n */\nexport default function getOuterSizes(element) ***REMOVED***\n  const styles = getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = ***REMOVED***\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  ***REMOVED***;\n  return result;\n***REMOVED***\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***String***REMOVED*** placement\n * @returns ***REMOVED***String***REMOVED*** flipped placement\n */\nexport default function getOppositePlacement(placement) ***REMOVED***\n  const hash = ***REMOVED*** left: 'right', right: 'left', bottom: 'top', top: 'bottom' ***REMOVED***;\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n***REMOVED***\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Object***REMOVED*** position - CSS position the Popper will get applied\n * @param ***REMOVED***HTMLElement***REMOVED*** popper - the popper element\n * @param ***REMOVED***Object***REMOVED*** referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param ***REMOVED***String***REMOVED*** placement - one of the valid placement options\n * @returns ***REMOVED***Object***REMOVED*** popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) ***REMOVED***\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = ***REMOVED***\n    width: popperRect.width,\n    height: popperRect.height,\n  ***REMOVED***;\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) ***REMOVED***\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  ***REMOVED*** else ***REMOVED***\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  ***REMOVED***\n\n  return popperOffsets;\n***REMOVED***\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Object***REMOVED*** state\n * @param ***REMOVED***Element***REMOVED*** popper - the popper element\n * @param ***REMOVED***Element***REMOVED*** reference - the reference element (the popper will be relative to this)\n * @param ***REMOVED***Element***REMOVED*** fixedPosition - is in fixed position mode\n * @returns ***REMOVED***Object***REMOVED*** An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) ***REMOVED***\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n***REMOVED***\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***String***REMOVED*** property (camelCase)\n * @returns ***REMOVED***String***REMOVED*** prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) ***REMOVED***\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) ***REMOVED***\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `$***REMOVED***prefix***REMOVED***$***REMOVED***upperProp***REMOVED***` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') ***REMOVED***\n      return toCheck;\n    ***REMOVED***\n  ***REMOVED***\n  return null;\n***REMOVED***\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Any***REMOVED*** functionToCheck - variable to check\n * @returns ***REMOVED***Boolean***REMOVED*** answer to: is a function?\n */\nexport default function isFunction(functionToCheck) ***REMOVED***\n  const getType = ***REMOVED******REMOVED***;\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n***REMOVED***\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns ***REMOVED***Boolean***REMOVED***\n */\nexport default function isModifierEnabled(modifiers, modifierName) ***REMOVED***\n  return modifiers.some(\n    (***REMOVED*** name, enabled ***REMOVED***) => enabled && name === modifierName\n  );\n***REMOVED***\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Array***REMOVED*** modifiers - list of modifiers\n * @param ***REMOVED***String***REMOVED*** requestingName - name of requesting modifier\n * @param ***REMOVED***String***REMOVED*** requestedName - name of requested modifier\n * @returns ***REMOVED***Boolean***REMOVED***\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) ***REMOVED***\n  const requesting = find(modifiers, (***REMOVED*** name ***REMOVED***) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => ***REMOVED***\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    ***REMOVED***);\n\n  if (!isRequired) ***REMOVED***\n    const requesting = `\\`$***REMOVED***requestingName***REMOVED***\\``;\n    const requested = `\\`$***REMOVED***requestedName***REMOVED***\\``;\n    console.warn(\n      `$***REMOVED***requested***REMOVED*** modifier is required by $***REMOVED***requesting***REMOVED*** modifier in order to work, be sure to include it before $***REMOVED***requesting***REMOVED***!`\n    );\n  ***REMOVED***\n  return isRequired;\n***REMOVED***\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED*******REMOVED*** input to check\n * @return ***REMOVED***Boolean***REMOVED***\n */\nexport default function isNumeric(n) ***REMOVED***\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n***REMOVED***\n","/**\n * Get the window associated with the element\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Window***REMOVED***\n */\nexport default function getWindow(element) ***REMOVED***\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n***REMOVED***\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) ***REMOVED***\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => ***REMOVED***\n    target.removeEventListener('scroll', state.updateBound);\n  ***REMOVED***);\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n***REMOVED***\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***dataObject***REMOVED*** data\n * @param ***REMOVED***Array***REMOVED*** modifiers\n * @param ***REMOVED***String***REMOVED*** ends - Optional modifier name used as stopper\n * @returns ***REMOVED***dataObject***REMOVED***\n */\nexport default function runModifiers(modifiers, data, ends) ***REMOVED***\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => ***REMOVED***\n    if (modifier['function']) ***REMOVED*** // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    ***REMOVED***\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) ***REMOVED***\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    ***REMOVED***\n  ***REMOVED***);\n\n  return data;\n***REMOVED***\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element - Element to apply the attributes to\n * @argument ***REMOVED***Object***REMOVED*** styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) ***REMOVED***\n  Object.keys(attributes).forEach(function(prop) ***REMOVED***\n    const value = attributes[prop];\n    if (value !== false) ***REMOVED***\n      element.setAttribute(prop, attributes[prop]);\n    ***REMOVED*** else ***REMOVED***\n      element.removeAttribute(prop);\n    ***REMOVED***\n  ***REMOVED***);\n***REMOVED***\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element - Element to apply the style to\n * @argument ***REMOVED***Object***REMOVED*** styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) ***REMOVED***\n  Object.keys(styles).forEach(prop => ***REMOVED***\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) ***REMOVED***\n      unit = 'px';\n    ***REMOVED***\n    element.style[prop] = styles[prop] + unit;\n  ***REMOVED***);\n***REMOVED***\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) ***REMOVED***\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, ***REMOVED*** passive: true ***REMOVED***);\n\n  if (!isBody) ***REMOVED***\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  ***REMOVED***\n  scrollParents.push(target);\n***REMOVED***\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) ***REMOVED***\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, ***REMOVED*** passive: true ***REMOVED***);\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n***REMOVED***\n","import isBrowser from './isBrowser';\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) ***REMOVED***\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) ***REMOVED***\n    timeoutDuration = 1;\n    break;\n  ***REMOVED***\n***REMOVED***\n\nexport function microtaskDebounce(fn) ***REMOVED***\n  let called = false\n  return () => ***REMOVED***\n    if (called) ***REMOVED***\n      return\n    ***REMOVED***\n    called = true\n    window.Promise.resolve().then(() => ***REMOVED***\n      called = false\n      fn()\n    ***REMOVED***)\n  ***REMOVED***\n***REMOVED***\n\nexport function taskDebounce(fn) ***REMOVED***\n  let scheduled = false;\n  return () => ***REMOVED***\n    if (!scheduled) ***REMOVED***\n      scheduled = true;\n      setTimeout(() => ***REMOVED***\n        scheduled = false;\n        fn();\n      ***REMOVED***, timeoutDuration);\n    ***REMOVED***\n  ***REMOVED***;\n***REMOVED***\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument ***REMOVED***Function***REMOVED*** fn\n* @returns ***REMOVED***Function***REMOVED***\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","export default typeof window !== 'undefined' && typeof document !== 'undefined';\n","import computeAutoPlacement from './computeAutoPlacement';\nimport debounce from './debounce';\nimport findIndex from './findIndex';\nimport getBordersSize from './getBordersSize';\nimport getBoundaries from './getBoundaries';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getClientRect from './getClientRect';\nimport getOffsetParent from './getOffsetParent';\nimport getOffsetRect from './getOffsetRect';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getOuterSizes from './getOuterSizes';\nimport getParentNode from './getParentNode';\nimport getPopperOffsets from './getPopperOffsets';\nimport getReferenceOffsets from './getReferenceOffsets';\nimport getScroll from './getScroll';\nimport getScrollParent from './getScrollParent';\nimport getStyleComputedProperty from './getStyleComputedProperty';\nimport getSupportedPropertyName from './getSupportedPropertyName';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport isFunction from './isFunction';\nimport isModifierEnabled from './isModifierEnabled';\nimport isModifierRequired from './isModifierRequired';\nimport isNumeric from './isNumeric';\nimport removeEventListeners from './removeEventListeners';\nimport runModifiers from './runModifiers';\nimport setAttributes from './setAttributes';\nimport setStyles from './setStyles';\nimport setupEventListeners from './setupEventListeners';\n\n/** @namespace Popper.Utils */\nexport ***REMOVED***\n  computeAutoPlacement,\n  debounce,\n  findIndex,\n  getBordersSize,\n  getBoundaries,\n  getBoundingClientRect,\n  getClientRect,\n  getOffsetParent,\n  getOffsetRect,\n  getOffsetRectRelativeToArbitraryNode,\n  getOuterSizes,\n  getParentNode,\n  getPopperOffsets,\n  getReferenceOffsets,\n  getScroll,\n  getScrollParent,\n  getStyleComputedProperty,\n  getSupportedPropertyName,\n  getWindowSizes,\n  isFixed,\n  isFunction,\n  isModifierEnabled,\n  isModifierRequired,\n  isNumeric,\n  removeEventListeners,\n  runModifiers,\n  setAttributes,\n  setStyles,\n  setupEventListeners,\n***REMOVED***;\n\n// This is here just for backward compatibility with versions lower than v1.10.3\n// you should import the utilities using named exports, if you want them all use:\n// ```\n// import * as PopperUtils from 'popper-utils';\n// ```\n// The default export will be removed in the next major version.\nexport default ***REMOVED***\n  computeAutoPlacement,\n  debounce,\n  findIndex,\n  getBordersSize,\n  getBoundaries,\n  getBoundingClientRect,\n  getClientRect,\n  getOffsetParent,\n  getOffsetRect,\n  getOffsetRectRelativeToArbitraryNode,\n  getOuterSizes,\n  getParentNode,\n  getPopperOffsets,\n  getReferenceOffsets,\n  getScroll,\n  getScrollParent,\n  getStyleComputedProperty,\n  getSupportedPropertyName,\n  getWindowSizes,\n  isFixed,\n  isFunction,\n  isModifierEnabled,\n  isModifierRequired,\n  isNumeric,\n  removeEventListeners,\n  runModifiers,\n  setAttributes,\n  setStyles,\n  setupEventListeners,\n***REMOVED***;\n"],"names":["element","nodeType","css","getComputedStyle","property","nodeName","parentNode","host","document","body","ownerDocument","getStyleComputedProperty","overflow","overflowX","overflowY","test","getScrollParent","getParentNode","version","isIE11","documentElement","noOffsetParent","isIE","offsetParent","nextElementSibling","indexOf","getOffsetParent","firstElementChild","node","getRoot","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","parseFloat","styles","Math","parseInt","computedStyle","getSize","offsets","width","height","rect","getBoundingClientRect","result","sizes","getWindowSizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getBordersSize","getClientRect","fixedPosition","isIE10","runIsIE","isHTML","parent","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","includeScroll","excludeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","window","innerWidth","innerHeight","offset","isFixed","parentElement","el","boundaries","getFixedPositionOffsetParent","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","popper","padding","isPaddingNumber","placement","getBoundaries","rects","refRect","sortedAreas","Object","keys","map","getArea","sort","b","area","a","filteredAreas","filter","computedPlacement","length","key","variation","split","Array","prototype","find","arr","findIndex","cur","match","obj","elementRect","offsetLeft","offsetTop","x","marginBottom","y","marginRight","hash","replace","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","referenceOffsets","getOppositePlacement","commonOffsetParent","prefixes","upperProp","charAt","toUpperCase","slice","i","prefix","toCheck","style","functionToCheck","getType","toString","call","modifiers","some","name","enabled","requesting","isRequired","warn","requested","n","isNaN","isFinite","defaultView","removeEventListener","state","updateBound","scrollParents","forEach","scrollElement","eventsEnabled","modifiersToRun","ends","fn","isFunction","data","reference","value","attributes","removeAttribute","setAttribute","unit","isNumeric","isBody","target","addEventListener","passive","push","max","isBrowser","navigator","userAgent","longerTimeoutBrowsers","timeoutDuration","supportsMicroTasks","Promise","called","resolve","then","scheduled"],"mappings":"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"***REMOVED***