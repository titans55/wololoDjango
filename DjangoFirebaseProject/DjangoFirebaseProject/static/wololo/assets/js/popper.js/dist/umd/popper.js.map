***REMOVED***"version":3,"file":"popper.js","sources":["../../src/utils/isBrowser.js","../../src/utils/debounce.js","../../src/utils/isFunction.js","../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/isIE.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getFixedPositionOffsetParent.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/runModifiers.js","../../src/methods/update.js","../../src/utils/isModifierEnabled.js","../../src/utils/getSupportedPropertyName.js","../../src/methods/destroy.js","../../src/utils/getWindow.js","../../src/utils/setupEventListeners.js","../../src/methods/enableEventListeners.js","../../src/utils/removeEventListeners.js","../../src/methods/disableEventListeners.js","../../src/utils/isNumeric.js","../../src/utils/setStyles.js","../../src/utils/setAttributes.js","../../src/modifiers/applyStyle.js","../../src/modifiers/computeStyle.js","../../src/utils/isModifierRequired.js","../../src/modifiers/arrow.js","../../src/utils/getOppositeVariation.js","../../src/methods/placements.js","../../src/utils/clockwise.js","../../src/modifiers/flip.js","../../src/modifiers/keepTogether.js","../../src/modifiers/offset.js","../../src/modifiers/preventOverflow.js","../../src/modifiers/shift.js","../../src/modifiers/hide.js","../../src/modifiers/inner.js","../../src/modifiers/index.js","../../src/methods/defaults.js","../../src/index.js"],"sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) ***REMOVED***\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) ***REMOVED***\n    timeoutDuration = 1;\n    break;\n  ***REMOVED***\n***REMOVED***\n\nexport function microtaskDebounce(fn) ***REMOVED***\n  let called = false\n  return () => ***REMOVED***\n    if (called) ***REMOVED***\n      return\n    ***REMOVED***\n    called = true\n    window.Promise.resolve().then(() => ***REMOVED***\n      called = false\n      fn()\n    ***REMOVED***)\n  ***REMOVED***\n***REMOVED***\n\nexport function taskDebounce(fn) ***REMOVED***\n  let scheduled = false;\n  return () => ***REMOVED***\n    if (!scheduled) ***REMOVED***\n      scheduled = true;\n      setTimeout(() => ***REMOVED***\n        scheduled = false;\n        fn();\n      ***REMOVED***, timeoutDuration);\n    ***REMOVED***\n  ***REMOVED***;\n***REMOVED***\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument ***REMOVED***Function***REMOVED*** fn\n* @returns ***REMOVED***Function***REMOVED***\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Any***REMOVED*** functionToCheck - variable to check\n * @returns ***REMOVED***Boolean***REMOVED*** answer to: is a function?\n */\nexport default function isFunction(functionToCheck) ***REMOVED***\n  const getType = ***REMOVED******REMOVED***;\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n***REMOVED***\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Eement***REMOVED*** element\n * @argument ***REMOVED***String***REMOVED*** property\n */\nexport default function getStyleComputedProperty(element, property) ***REMOVED***\n  if (element.nodeType !== 1) ***REMOVED***\n    return [];\n  ***REMOVED***\n  // NOTE: 1 DOM access here\n  const css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n***REMOVED***\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Element***REMOVED*** parent\n */\nexport default function getParentNode(element) ***REMOVED***\n  if (element.nodeName === 'HTML') ***REMOVED***\n    return element;\n  ***REMOVED***\n  return element.parentNode || element.host;\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Element***REMOVED*** scroll parent\n */\nexport default function getScrollParent(element) ***REMOVED***\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) ***REMOVED***\n    return document.body\n  ***REMOVED***\n\n  switch (element.nodeName) ***REMOVED***\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  ***REMOVED***\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const ***REMOVED*** overflow, overflowX, overflowY ***REMOVED*** = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) ***REMOVED***\n    return element;\n  ***REMOVED***\n\n  return getScrollParent(getParentNode(element));\n***REMOVED***\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Number***REMOVED*** version to check\n * @returns ***REMOVED***Boolean***REMOVED*** isIE\n */\nexport default function isIE(version) ***REMOVED***\n  if (version === 11) ***REMOVED***\n    return isIE11;\n  ***REMOVED***\n  if (version === 10) ***REMOVED***\n    return isIE10;\n  ***REMOVED***\n  return isIE11 || isIE10;\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Element***REMOVED*** offset parent\n */\nexport default function getOffsetParent(element) ***REMOVED***\n  if (!element) ***REMOVED***\n    return document.documentElement;\n  ***REMOVED***\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) ***REMOVED***\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  ***REMOVED***\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') ***REMOVED***\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  ***REMOVED***\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) ***REMOVED***\n    return getOffsetParent(offsetParent);\n  ***REMOVED***\n\n  return offsetParent;\n***REMOVED***\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) ***REMOVED***\n  const ***REMOVED*** nodeName ***REMOVED*** = element;\n  if (nodeName === 'BODY') ***REMOVED***\n    return false;\n  ***REMOVED***\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n***REMOVED***\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** node\n * @returns ***REMOVED***Element***REMOVED*** root node\n */\nexport default function getRoot(node) ***REMOVED***\n  if (node.parentNode !== null) ***REMOVED***\n    return getRoot(node.parentNode);\n  ***REMOVED***\n\n  return node;\n***REMOVED***\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element1\n * @argument ***REMOVED***Element***REMOVED*** element2\n * @returns ***REMOVED***Element***REMOVED*** common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) ***REMOVED***\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) ***REMOVED***\n    return document.documentElement;\n  ***REMOVED***\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const ***REMOVED*** commonAncestorContainer ***REMOVED*** = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) ***REMOVED***\n    if (isOffsetContainer(commonAncestorContainer)) ***REMOVED***\n      return commonAncestorContainer;\n    ***REMOVED***\n\n    return getOffsetParent(commonAncestorContainer);\n  ***REMOVED***\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) ***REMOVED***\n    return findCommonOffsetParent(element1root.host, element2);\n  ***REMOVED*** else ***REMOVED***\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  ***REMOVED***\n***REMOVED***\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @argument ***REMOVED***String***REMOVED*** side `top` or `left`\n * @returns ***REMOVED***number***REMOVED*** amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') ***REMOVED***\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') ***REMOVED***\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  ***REMOVED***\n\n  return element[upperSide];\n***REMOVED***\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Object***REMOVED*** rect - Rect object you want to change\n * @param ***REMOVED***HTMLElement***REMOVED*** element - The element from the function reads the scroll values\n * @param ***REMOVED***Boolean***REMOVED*** subtract - set to true if you want to subtract the scroll values\n * @return ***REMOVED***Object***REMOVED*** rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) ***REMOVED***\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n***REMOVED***\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***CSSStyleDeclaration***REMOVED*** styles\n * Result of `getStyleComputedProperty` on the given element\n * @param ***REMOVED***String***REMOVED*** axis - `x` or `y`\n * @return ***REMOVED***number***REMOVED*** borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) ***REMOVED***\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border$***REMOVED***sideA***REMOVED***Width`], 10) +\n    parseFloat(styles[`border$***REMOVED***sideB***REMOVED***Width`], 10)\n  );\n***REMOVED***\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) ***REMOVED***\n  return Math.max(\n    body[`offset$***REMOVED***axis***REMOVED***`],\n    body[`scroll$***REMOVED***axis***REMOVED***`],\n    html[`client$***REMOVED***axis***REMOVED***`],\n    html[`offset$***REMOVED***axis***REMOVED***`],\n    html[`scroll$***REMOVED***axis***REMOVED***`],\n    isIE(10)\n      ? (parseInt(html[`offset$***REMOVED***axis***REMOVED***`]) + \n      parseInt(computedStyle[`margin$***REMOVED***axis === 'Height' ? 'Top' : 'Left'***REMOVED***`]) + \n      parseInt(computedStyle[`margin$***REMOVED***axis === 'Height' ? 'Bottom' : 'Right'***REMOVED***`]))\n    : 0 \n  );\n***REMOVED***\n\nexport default function getWindowSizes(document) ***REMOVED***\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return ***REMOVED***\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  ***REMOVED***;\n***REMOVED***\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Object***REMOVED*** offsets\n * @returns ***REMOVED***Object***REMOVED*** ClientRect like output\n */\nexport default function getClientRect(offsets) ***REMOVED***\n  return ***REMOVED***\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  ***REMOVED***;\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***HTMLElement***REMOVED*** element\n * @return ***REMOVED***Object***REMOVED*** client rect\n */\nexport default function getBoundingClientRect(element) ***REMOVED***\n  let rect = ***REMOVED******REMOVED***;\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try ***REMOVED***\n    if (isIE(10)) ***REMOVED***\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    ***REMOVED***\n    else ***REMOVED***\n      rect = element.getBoundingClientRect();\n    ***REMOVED***\n  ***REMOVED***\n  catch(e)***REMOVED******REMOVED***\n\n  const result = ***REMOVED***\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  ***REMOVED***;\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : ***REMOVED******REMOVED***;\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) ***REMOVED***\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  ***REMOVED***\n\n  return getClientRect(result);\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) ***REMOVED***\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) ***REMOVED***\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  ***REMOVED***\n  let offsets = getClientRect(***REMOVED***\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  ***REMOVED***);\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) ***REMOVED***\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  ***REMOVED***\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) ***REMOVED***\n    offsets = includeScroll(offsets, parent);\n  ***REMOVED***\n\n  return offsets;\n***REMOVED***\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) ***REMOVED***\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = ***REMOVED***\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  ***REMOVED***;\n\n  return getClientRect(offset);\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @argument ***REMOVED***Element***REMOVED*** customContainer\n * @returns ***REMOVED***Boolean***REMOVED*** answer to \"isFixed?\"\n */\nexport default function isFixed(element) ***REMOVED***\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') ***REMOVED***\n    return false;\n  ***REMOVED***\n  if (getStyleComputedProperty(element, 'position') === 'fixed') ***REMOVED***\n    return true;\n  ***REMOVED***\n  return isFixed(getParentNode(element));\n***REMOVED***\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Element***REMOVED*** first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) ***REMOVED***\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) ***REMOVED***\n    return document.documentElement;\n  ***REMOVED***\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') ***REMOVED***\n    el = el.parentElement;\n  ***REMOVED***\n  return el || document.documentElement;\n\n***REMOVED***\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***HTMLElement***REMOVED*** popper\n * @param ***REMOVED***HTMLElement***REMOVED*** reference\n * @param ***REMOVED***number***REMOVED*** padding\n * @param ***REMOVED***HTMLElement***REMOVED*** boundariesElement - Element used to define the boundaries\n * @param ***REMOVED***Boolean***REMOVED*** fixedPosition - Is in fixed position mode\n * @returns ***REMOVED***Object***REMOVED*** Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) ***REMOVED***\n  // NOTE: 1 DOM access here\n\n  let boundaries = ***REMOVED*** top: 0, left: 0 ***REMOVED***;\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) ***REMOVED***\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  ***REMOVED***\n\n  else ***REMOVED***\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') ***REMOVED***\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') ***REMOVED***\n        boundariesNode = popper.ownerDocument.documentElement;\n      ***REMOVED***\n    ***REMOVED*** else if (boundariesElement === 'window') ***REMOVED***\n      boundariesNode = popper.ownerDocument.documentElement;\n    ***REMOVED*** else ***REMOVED***\n      boundariesNode = boundariesElement;\n    ***REMOVED***\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) ***REMOVED***\n      const ***REMOVED*** height, width ***REMOVED*** = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    ***REMOVED*** else ***REMOVED***\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    ***REMOVED***\n  ***REMOVED***\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n***REMOVED***\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea(***REMOVED*** width, height ***REMOVED***) ***REMOVED***\n  return width * height;\n***REMOVED***\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by update method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) ***REMOVED***\n  if (placement.indexOf('auto') === -1) ***REMOVED***\n    return placement;\n  ***REMOVED***\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = ***REMOVED***\n    top: ***REMOVED***\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    ***REMOVED***,\n    right: ***REMOVED***\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    ***REMOVED***,\n    bottom: ***REMOVED***\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    ***REMOVED***,\n    left: ***REMOVED***\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    ***REMOVED***,\n  ***REMOVED***;\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => (***REMOVED***\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    ***REMOVED***))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    (***REMOVED*** width, height ***REMOVED***) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-$***REMOVED***variation***REMOVED***` : '');\n***REMOVED***\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Object***REMOVED*** state\n * @param ***REMOVED***Element***REMOVED*** popper - the popper element\n * @param ***REMOVED***Element***REMOVED*** reference - the reference element (the popper will be relative to this)\n * @param ***REMOVED***Element***REMOVED*** fixedPosition - is in fixed position mode\n * @returns ***REMOVED***Object***REMOVED*** An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) ***REMOVED***\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n***REMOVED***\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Object***REMOVED*** object containing width and height properties\n */\nexport default function getOuterSizes(element) ***REMOVED***\n  const styles = getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = ***REMOVED***\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  ***REMOVED***;\n  return result;\n***REMOVED***\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***String***REMOVED*** placement\n * @returns ***REMOVED***String***REMOVED*** flipped placement\n */\nexport default function getOppositePlacement(placement) ***REMOVED***\n  const hash = ***REMOVED*** left: 'right', right: 'left', bottom: 'top', top: 'bottom' ***REMOVED***;\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n***REMOVED***\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Object***REMOVED*** position - CSS position the Popper will get applied\n * @param ***REMOVED***HTMLElement***REMOVED*** popper - the popper element\n * @param ***REMOVED***Object***REMOVED*** referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param ***REMOVED***String***REMOVED*** placement - one of the valid placement options\n * @returns ***REMOVED***Object***REMOVED*** popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) ***REMOVED***\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = ***REMOVED***\n    width: popperRect.width,\n    height: popperRect.height,\n  ***REMOVED***;\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) ***REMOVED***\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  ***REMOVED*** else ***REMOVED***\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  ***REMOVED***\n\n  return popperOffsets;\n***REMOVED***\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Array***REMOVED*** arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) ***REMOVED***\n  // use native find if supported\n  if (Array.prototype.find) ***REMOVED***\n    return arr.find(check);\n  ***REMOVED***\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n***REMOVED***\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Array***REMOVED*** arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) ***REMOVED***\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) ***REMOVED***\n    return arr.findIndex(cur => cur[prop] === value);\n  ***REMOVED***\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n***REMOVED***\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***dataObject***REMOVED*** data\n * @param ***REMOVED***Array***REMOVED*** modifiers\n * @param ***REMOVED***String***REMOVED*** ends - Optional modifier name used as stopper\n * @returns ***REMOVED***dataObject***REMOVED***\n */\nexport default function runModifiers(modifiers, data, ends) ***REMOVED***\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => ***REMOVED***\n    if (modifier['function']) ***REMOVED*** // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    ***REMOVED***\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) ***REMOVED***\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    ***REMOVED***\n  ***REMOVED***);\n\n  return data;\n***REMOVED***\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() ***REMOVED***\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) ***REMOVED***\n    return;\n  ***REMOVED***\n\n  let data = ***REMOVED***\n    instance: this,\n    styles: ***REMOVED******REMOVED***,\n    arrowStyles: ***REMOVED******REMOVED***,\n    attributes: ***REMOVED******REMOVED***,\n    flipped: false,\n    offsets: ***REMOVED******REMOVED***,\n  ***REMOVED***;\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) ***REMOVED***\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  ***REMOVED*** else ***REMOVED***\n    this.options.onUpdate(data);\n  ***REMOVED***\n***REMOVED***\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns ***REMOVED***Boolean***REMOVED***\n */\nexport default function isModifierEnabled(modifiers, modifierName) ***REMOVED***\n  return modifiers.some(\n    (***REMOVED*** name, enabled ***REMOVED***) => enabled && name === modifierName\n  );\n***REMOVED***\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***String***REMOVED*** property (camelCase)\n * @returns ***REMOVED***String***REMOVED*** prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) ***REMOVED***\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) ***REMOVED***\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `$***REMOVED***prefix***REMOVED***$***REMOVED***upperProp***REMOVED***` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') ***REMOVED***\n      return toCheck;\n    ***REMOVED***\n  ***REMOVED***\n  return null;\n***REMOVED***\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() ***REMOVED***\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) ***REMOVED***\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  ***REMOVED***\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) ***REMOVED***\n    this.popper.parentNode.removeChild(this.popper);\n  ***REMOVED***\n  return this;\n***REMOVED***\n","/**\n * Get the window associated with the element\n * @argument ***REMOVED***Element***REMOVED*** element\n * @returns ***REMOVED***Window***REMOVED***\n */\nexport default function getWindow(element) ***REMOVED***\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n***REMOVED***\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) ***REMOVED***\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, ***REMOVED*** passive: true ***REMOVED***);\n\n  if (!isBody) ***REMOVED***\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  ***REMOVED***\n  scrollParents.push(target);\n***REMOVED***\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) ***REMOVED***\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, ***REMOVED*** passive: true ***REMOVED***);\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n***REMOVED***\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() ***REMOVED***\n  if (!this.state.eventsEnabled) ***REMOVED***\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  ***REMOVED***\n***REMOVED***\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) ***REMOVED***\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => ***REMOVED***\n    target.removeEventListener('scroll', state.updateBound);\n  ***REMOVED***);\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n***REMOVED***\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() ***REMOVED***\n  if (this.state.eventsEnabled) ***REMOVED***\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  ***REMOVED***\n***REMOVED***\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED*******REMOVED*** input to check\n * @return ***REMOVED***Boolean***REMOVED***\n */\nexport default function isNumeric(n) ***REMOVED***\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n***REMOVED***\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element - Element to apply the style to\n * @argument ***REMOVED***Object***REMOVED*** styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) ***REMOVED***\n  Object.keys(styles).forEach(prop => ***REMOVED***\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) ***REMOVED***\n      unit = 'px';\n    ***REMOVED***\n    element.style[prop] = styles[prop] + unit;\n  ***REMOVED***);\n***REMOVED***\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***Element***REMOVED*** element - Element to apply the attributes to\n * @argument ***REMOVED***Object***REMOVED*** styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) ***REMOVED***\n  Object.keys(attributes).forEach(function(prop) ***REMOVED***\n    const value = attributes[prop];\n    if (value !== false) ***REMOVED***\n      element.setAttribute(prop, attributes[prop]);\n    ***REMOVED*** else ***REMOVED***\n      element.removeAttribute(prop);\n    ***REMOVED***\n  ***REMOVED***);\n***REMOVED***\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by `update` method\n * @argument ***REMOVED***Object***REMOVED*** data.styles - List of style properties - values to apply to popper element\n * @argument ***REMOVED***Object***REMOVED*** data.attributes - List of attribute properties - values to apply to popper element\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The same data object\n */\nexport default function applyStyle(data) ***REMOVED***\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) ***REMOVED***\n    setStyles(data.arrowElement, data.arrowStyles);\n  ***REMOVED***\n\n  return data;\n***REMOVED***\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param ***REMOVED***HTMLElement***REMOVED*** reference - The reference element used to position the popper\n * @param ***REMOVED***HTMLElement***REMOVED*** popper - The HTML element used as popper\n * @param ***REMOVED***Object***REMOVED*** options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) ***REMOVED***\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, ***REMOVED*** position: options.positionFixed ? 'fixed' : 'absolute' ***REMOVED***);\n\n  return options;\n***REMOVED***\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by `update` method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function computeStyle(data, options) ***REMOVED***\n  const ***REMOVED*** x, y ***REMOVED*** = options;\n  const ***REMOVED*** popper ***REMOVED*** = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) ***REMOVED***\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  ***REMOVED***\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = ***REMOVED***\n    position: popper.position,\n  ***REMOVED***;\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  const offsets = ***REMOVED***\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right),\n  ***REMOVED***;\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') ***REMOVED***\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') ***REMOVED***\n      top = -offsetParent.clientHeight + offsets.bottom;\n    ***REMOVED*** else ***REMOVED***\n      top = -offsetParentRect.height + offsets.bottom;\n    ***REMOVED***\n  ***REMOVED*** else ***REMOVED***\n    top = offsets.top;\n  ***REMOVED***\n  if (sideB === 'right') ***REMOVED***\n    if (offsetParent.nodeName === 'HTML') ***REMOVED***\n      left = -offsetParent.clientWidth + offsets.right;\n    ***REMOVED*** else ***REMOVED***\n      left = -offsetParentRect.width + offsets.right;\n    ***REMOVED***\n  ***REMOVED*** else ***REMOVED***\n    left = offsets.left;\n  ***REMOVED***\n  if (gpuAcceleration && prefixedProperty) ***REMOVED***\n    styles[prefixedProperty] = `translate3d($***REMOVED***left***REMOVED***px, $***REMOVED***top***REMOVED***px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  ***REMOVED*** else ***REMOVED***\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `$***REMOVED***sideA***REMOVED***, $***REMOVED***sideB***REMOVED***`;\n  ***REMOVED***\n\n  // Attributes\n  const attributes = ***REMOVED***\n    'x-placement': data.placement,\n  ***REMOVED***;\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = ***REMOVED*** ...attributes, ...data.attributes ***REMOVED***;\n  data.styles = ***REMOVED*** ...styles, ...data.styles ***REMOVED***;\n  data.arrowStyles = ***REMOVED*** ...data.offsets.arrow, ...data.arrowStyles ***REMOVED***;\n\n  return data;\n***REMOVED***\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param ***REMOVED***Array***REMOVED*** modifiers - list of modifiers\n * @param ***REMOVED***String***REMOVED*** requestingName - name of requesting modifier\n * @param ***REMOVED***String***REMOVED*** requestedName - name of requested modifier\n * @returns ***REMOVED***Boolean***REMOVED***\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) ***REMOVED***\n  const requesting = find(modifiers, (***REMOVED*** name ***REMOVED***) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => ***REMOVED***\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    ***REMOVED***);\n\n  if (!isRequired) ***REMOVED***\n    const requesting = `\\`$***REMOVED***requestingName***REMOVED***\\``;\n    const requested = `\\`$***REMOVED***requestedName***REMOVED***\\``;\n    console.warn(\n      `$***REMOVED***requested***REMOVED*** modifier is required by $***REMOVED***requesting***REMOVED*** modifier in order to work, be sure to include it before $***REMOVED***requesting***REMOVED***!`\n    );\n  ***REMOVED***\n  return isRequired;\n***REMOVED***\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by update method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function arrow(data, options) ***REMOVED***\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) ***REMOVED***\n    return data;\n  ***REMOVED***\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') ***REMOVED***\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) ***REMOVED***\n      return data;\n    ***REMOVED***\n  ***REMOVED*** else ***REMOVED***\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) ***REMOVED***\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    ***REMOVED***\n  ***REMOVED***\n\n  const placement = data.placement.split('-')[0];\n  const ***REMOVED*** popper, reference ***REMOVED*** = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) ***REMOVED***\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  ***REMOVED***\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) ***REMOVED***\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  ***REMOVED***\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin$***REMOVED***sideCapitalized***REMOVED***`], 10);\n  const popperBorderSide = parseFloat(css[`border$***REMOVED***sideCapitalized***REMOVED***Width`], 10);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = ***REMOVED***\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  ***REMOVED***;\n\n  return data;\n***REMOVED***\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***String***REMOVED*** placement variation\n * @returns ***REMOVED***String***REMOVED*** flipped placement variation\n */\nexport default function getOppositeVariation(variation) ***REMOVED***\n  if (variation === 'end') ***REMOVED***\n    return 'start';\n  ***REMOVED*** else if (variation === 'start') ***REMOVED***\n    return 'end';\n  ***REMOVED***\n  return variation;\n***REMOVED***\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type ***REMOVED***Array***REMOVED***\n * @enum ***REMOVED***String***REMOVED***\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument ***REMOVED***String***REMOVED*** placement - A valid placement (it accepts variations)\n * @argument ***REMOVED***Boolean***REMOVED*** counter - Set to true to walk the placements counterclockwise\n * @returns ***REMOVED***Array***REMOVED*** placements including their variations\n */\nexport default function clockwise(placement, counter = false) ***REMOVED***\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n***REMOVED***\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = ***REMOVED***\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n***REMOVED***;\n\n/**\n * @function\n * @memberof Modifiers\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by update method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function flip(data, options) ***REMOVED***\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) ***REMOVED***\n    return data;\n  ***REMOVED***\n\n  if (data.flipped && data.placement === data.originalPlacement) ***REMOVED***\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  ***REMOVED***\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) ***REMOVED***\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  ***REMOVED***\n\n  flipOrder.forEach((step, index) => ***REMOVED***\n    if (placement !== step || flipOrder.length === index + 1) ***REMOVED***\n      return data;\n    ***REMOVED***\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) ***REMOVED***\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) ***REMOVED***\n        placement = flipOrder[index + 1];\n      ***REMOVED***\n\n      if (flippedVariation) ***REMOVED***\n        variation = getOppositeVariation(variation);\n      ***REMOVED***\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = ***REMOVED***\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      ***REMOVED***;\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    ***REMOVED***\n  ***REMOVED***);\n  return data;\n***REMOVED***\n","/**\n * @function\n * @memberof Modifiers\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by update method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function keepTogether(data) ***REMOVED***\n  const ***REMOVED*** popper, reference ***REMOVED*** = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) ***REMOVED***\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  ***REMOVED***\n  if (popper[opSide] > floor(reference[side])) ***REMOVED***\n    data.offsets.popper[opSide] = floor(reference[side]);\n  ***REMOVED***\n\n  return data;\n***REMOVED***\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof ***REMOVED***modifiers~offset***REMOVED***\n * @private\n * @argument ***REMOVED***String***REMOVED*** str - Value + unit string\n * @argument ***REMOVED***String***REMOVED*** measurement - `height` or `width`\n * @argument ***REMOVED***Object***REMOVED*** popperOffsets\n * @argument ***REMOVED***Object***REMOVED*** referenceOffsets\n * @returns ***REMOVED***Number|String***REMOVED***\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) ***REMOVED***\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) ***REMOVED***\n    return str;\n  ***REMOVED***\n\n  if (unit.indexOf('%') === 0) ***REMOVED***\n    let element;\n    switch (unit) ***REMOVED***\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    ***REMOVED***\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  ***REMOVED*** else if (unit === 'vh' || unit === 'vw') ***REMOVED***\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') ***REMOVED***\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    ***REMOVED*** else ***REMOVED***\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    ***REMOVED***\n    return size / 100 * value;\n  ***REMOVED*** else ***REMOVED***\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  ***REMOVED***\n***REMOVED***\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof ***REMOVED***modifiers~offset***REMOVED***\n * @private\n * @argument ***REMOVED***String***REMOVED*** offset\n * @argument ***REMOVED***Object***REMOVED*** popperOffsets\n * @argument ***REMOVED***Object***REMOVED*** referenceOffsets\n * @argument ***REMOVED***String***REMOVED*** basePlacement\n * @returns ***REMOVED***Array***REMOVED*** a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) ***REMOVED***\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) ***REMOVED***\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  ***REMOVED***\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => ***REMOVED***\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => ***REMOVED***\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) ***REMOVED***\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          ***REMOVED*** else if (mergeWithPrevious) ***REMOVED***\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          ***REMOVED*** else ***REMOVED***\n            return a.concat(b);\n          ***REMOVED***\n        ***REMOVED***, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  ***REMOVED***);\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => ***REMOVED***\n    op.forEach((frag, index2) => ***REMOVED***\n      if (isNumeric(frag)) ***REMOVED***\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      ***REMOVED***\n    ***REMOVED***);\n  ***REMOVED***);\n  return offsets;\n***REMOVED***\n\n/**\n * @function\n * @memberof Modifiers\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by update method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @argument ***REMOVED***Number|String***REMOVED*** options.offset=0\n * The offset value as described in the modifier description\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function offset(data, ***REMOVED*** offset ***REMOVED***) ***REMOVED***\n  const ***REMOVED*** placement, offsets: ***REMOVED*** popper, reference ***REMOVED*** ***REMOVED*** = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) ***REMOVED***\n    offsets = [+offset, 0];\n  ***REMOVED*** else ***REMOVED***\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  ***REMOVED***\n\n  if (basePlacement === 'left') ***REMOVED***\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  ***REMOVED*** else if (basePlacement === 'right') ***REMOVED***\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  ***REMOVED*** else if (basePlacement === 'top') ***REMOVED***\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  ***REMOVED*** else if (basePlacement === 'bottom') ***REMOVED***\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  ***REMOVED***\n\n  data.popper = popper;\n  return data;\n***REMOVED***\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by `update` method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function preventOverflow(data, options) ***REMOVED***\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) ***REMOVED***\n    boundariesElement = getOffsetParent(boundariesElement);\n  ***REMOVED***\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const ***REMOVED*** top, left, [transformProp]: transform ***REMOVED*** = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = ***REMOVED***\n    primary(placement) ***REMOVED***\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) ***REMOVED***\n        value = Math.max(popper[placement], boundaries[placement]);\n      ***REMOVED***\n      return ***REMOVED*** [placement]: value ***REMOVED***;\n    ***REMOVED***,\n    secondary(placement) ***REMOVED***\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) ***REMOVED***\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      ***REMOVED***\n      return ***REMOVED*** [mainSide]: value ***REMOVED***;\n    ***REMOVED***,\n  ***REMOVED***;\n\n  order.forEach(placement => ***REMOVED***\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = ***REMOVED*** ...popper, ...check[side](placement) ***REMOVED***;\n  ***REMOVED***);\n\n  data.offsets.popper = popper;\n\n  return data;\n***REMOVED***\n","/**\n * @function\n * @memberof Modifiers\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by `update` method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function shift(data) ***REMOVED***\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) ***REMOVED***\n    const ***REMOVED*** reference, popper ***REMOVED*** = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = ***REMOVED***\n      start: ***REMOVED*** [side]: reference[side] ***REMOVED***,\n      end: ***REMOVED***\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      ***REMOVED***,\n    ***REMOVED***;\n\n    data.offsets.popper = ***REMOVED*** ...popper, ...shiftOffsets[shiftvariation] ***REMOVED***;\n  ***REMOVED***\n\n  return data;\n***REMOVED***\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by update method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function hide(data) ***REMOVED***\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) ***REMOVED***\n    return data;\n  ***REMOVED***\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) ***REMOVED***\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) ***REMOVED***\n      return data;\n    ***REMOVED***\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  ***REMOVED*** else ***REMOVED***\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) ***REMOVED***\n      return data;\n    ***REMOVED***\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  ***REMOVED***\n\n  return data;\n***REMOVED***\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument ***REMOVED***Object***REMOVED*** data - The data object generated by `update` method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***Object***REMOVED*** The data object, properly modified\n */\nexport default function inner(data) ***REMOVED***\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const ***REMOVED*** popper, reference ***REMOVED*** = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n***REMOVED***\n","import applyStyle, ***REMOVED*** applyStyleOnLoad ***REMOVED*** from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument ***REMOVED***dataObject***REMOVED*** data - The data object generated by `update` method\n * @argument ***REMOVED***Object***REMOVED*** options - Modifiers configuration and options\n * @returns ***REMOVED***dataObject***REMOVED*** The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default ***REMOVED***\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: ***REMOVED***\n    /** @prop ***REMOVED***number***REMOVED*** order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop ***REMOVED***Boolean***REMOVED*** enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop ***REMOVED***ModifierFn***REMOVED*** */\n    fn: shift,\n  ***REMOVED***,\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: ***REMOVED***\n    /** @prop ***REMOVED***number***REMOVED*** order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop ***REMOVED***Boolean***REMOVED*** enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop ***REMOVED***ModifierFn***REMOVED*** */\n    fn: offset,\n    /** @prop ***REMOVED***Number|String***REMOVED*** offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  ***REMOVED***,\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: ***REMOVED***\n    /** @prop ***REMOVED***number***REMOVED*** order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop ***REMOVED***Boolean***REMOVED*** enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop ***REMOVED***ModifierFn***REMOVED*** */\n    fn: preventOverflow,\n    /**\n     * @prop ***REMOVED***Array***REMOVED*** [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop ***REMOVED***number***REMOVED*** padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop ***REMOVED***String|HTMLElement***REMOVED*** boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  ***REMOVED***,\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: ***REMOVED***\n    /** @prop ***REMOVED***number***REMOVED*** order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop ***REMOVED***Boolean***REMOVED*** enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop ***REMOVED***ModifierFn***REMOVED*** */\n    fn: keepTogether,\n  ***REMOVED***,\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: ***REMOVED***\n    /** @prop ***REMOVED***number***REMOVED*** order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop ***REMOVED***Boolean***REMOVED*** enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop ***REMOVED***ModifierFn***REMOVED*** */\n    fn: arrow,\n    /** @prop ***REMOVED***String|HTMLElement***REMOVED*** element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  ***REMOVED***,\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: ***REMOVED***\n    /** @prop ***REMOVED***number***REMOVED*** order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop ***REMOVED***Boolean***REMOVED*** enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop ***REMOVED***ModifierFn***REMOVED*** */\n    fn: flip,\n    /**\n     * @prop ***REMOVED***String|Array***REMOVED*** behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop ***REMOVED***number***REMOVED*** padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop ***REMOVED***String|HTMLElement***REMOVED*** boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n  ***REMOVED***,\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: ***REMOVED***\n    /** @prop ***REMOVED***number***REMOVED*** order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop ***REMOVED***Boolean***REMOVED*** enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop ***REMOVED***ModifierFn***REMOVED*** */\n    fn: inner,\n  ***REMOVED***,\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: ***REMOVED***\n    /** @prop ***REMOVED***number***REMOVED*** order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop ***REMOVED***Boolean***REMOVED*** enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop ***REMOVED***ModifierFn***REMOVED*** */\n    fn: hide,\n  ***REMOVED***,\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: ***REMOVED***\n    /** @prop ***REMOVED***number***REMOVED*** order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop ***REMOVED***Boolean***REMOVED*** enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop ***REMOVED***ModifierFn***REMOVED*** */\n    fn: computeStyle,\n    /**\n     * @prop ***REMOVED***Boolean***REMOVED*** gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop ***REMOVED***string***REMOVED*** [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop ***REMOVED***string***REMOVED*** [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  ***REMOVED***,\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: ***REMOVED***\n    /** @prop ***REMOVED***number***REMOVED*** order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop ***REMOVED***Boolean***REMOVED*** enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop ***REMOVED***ModifierFn***REMOVED*** */\n    fn: applyStyle,\n    /** @prop ***REMOVED***Function***REMOVED*** */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop ***REMOVED***Boolean***REMOVED*** gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  ***REMOVED***,\n***REMOVED***;\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property ***REMOVED***Object***REMOVED*** data.instance The Popper.js instance\n * @property ***REMOVED***String***REMOVED*** data.placement Placement applied to popper\n * @property ***REMOVED***String***REMOVED*** data.originalPlacement Placement originally defined on init\n * @property ***REMOVED***Boolean***REMOVED*** data.flipped True if popper has been flipped by flip modifier\n * @property ***REMOVED***Boolean***REMOVED*** data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property ***REMOVED***HTMLElement***REMOVED*** data.arrowElement Node used as arrow by arrow modifier\n * @property ***REMOVED***Object***REMOVED*** data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property ***REMOVED***Object***REMOVED*** data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property ***REMOVED***Object***REMOVED*** data.boundaries Offsets of the popper boundaries\n * @property ***REMOVED***Object***REMOVED*** data.offsets The measurements of popper, reference and arrow elements\n * @property ***REMOVED***Object***REMOVED*** data.offsets.popper `top`, `left`, `width`, `height` values\n * @property ***REMOVED***Object***REMOVED*** data.offsets.reference `top`, `left`, `width`, `height` values\n * @property ***REMOVED***Object***REMOVED*** data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, ***REMOVED***\n *   modifiers: ***REMOVED***\n *     preventOverflow: ***REMOVED*** enabled: false ***REMOVED***\n *   ***REMOVED***\n * ***REMOVED***)\n * ```\n * @type ***REMOVED***Object***REMOVED***\n * @static\n * @memberof Popper\n */\nexport default ***REMOVED***\n  /**\n   * Popper's placement.\n   * @prop ***REMOVED***Popper.placements***REMOVED*** placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop ***REMOVED***Boolean***REMOVED*** positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop ***REMOVED***Boolean***REMOVED*** eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop ***REMOVED***Boolean***REMOVED*** removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop ***REMOVED***onCreate***REMOVED***\n   */\n  onCreate: () => ***REMOVED******REMOVED***,\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop ***REMOVED***onUpdate***REMOVED***\n   */\n  onUpdate: () => ***REMOVED******REMOVED***,\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop ***REMOVED***modifiers***REMOVED***\n   */\n  modifiers,\n***REMOVED***;\n\n/**\n * @callback onCreate\n * @param ***REMOVED***dataObject***REMOVED*** data\n */\n\n/**\n * @callback onUpdate\n * @param ***REMOVED***dataObject***REMOVED*** data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper ***REMOVED***\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param ***REMOVED***HTMLElement|referenceObject***REMOVED*** reference - The reference element used to position the popper\n   * @param ***REMOVED***HTMLElement***REMOVED*** popper - The HTML element used as the popper\n   * @param ***REMOVED***Object***REMOVED*** options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return ***REMOVED***Object***REMOVED*** instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = ***REMOVED******REMOVED***) ***REMOVED***\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with ***REMOVED******REMOVED*** we create a new object with the options inside it\n    this.options = ***REMOVED*** ...Popper.Defaults, ...options ***REMOVED***;\n\n    // init state\n    this.state = ***REMOVED***\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    ***REMOVED***;\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = ***REMOVED******REMOVED***;\n    Object.keys(***REMOVED***\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    ***REMOVED***).forEach(name => ***REMOVED***\n      this.options.modifiers[name] = ***REMOVED***\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || ***REMOVED******REMOVED***),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : ***REMOVED******REMOVED***),\n      ***REMOVED***;\n    ***REMOVED***);\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => (***REMOVED***\n        name,\n        ...this.options.modifiers[name],\n      ***REMOVED***))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => ***REMOVED***\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) ***REMOVED***\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      ***REMOVED***\n    ***REMOVED***);\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) ***REMOVED***\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    ***REMOVED***\n\n    this.state.eventsEnabled = eventsEnabled;\n  ***REMOVED***\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() ***REMOVED***\n    return update.call(this);\n  ***REMOVED***\n  destroy() ***REMOVED***\n    return destroy.call(this);\n  ***REMOVED***\n  enableEventListeners() ***REMOVED***\n    return enableEventListeners.call(this);\n  ***REMOVED***\n  disableEventListeners() ***REMOVED***\n    return disableEventListeners.call(this);\n  ***REMOVED***\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type ***REMOVED***Object***REMOVED***\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n***REMOVED***\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property ***REMOVED***Function***REMOVED*** data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property ***REMOVED***number***REMOVED*** data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property ***REMOVED***number***REMOVED*** data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"],"names":["window","document","longerTimeoutBrowsers","timeoutDuration","i","length","isBrowser","navigator","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","supportsMicroTasks","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","ownerDocument","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","getClientRect","offsets","width","height","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","Object","keys","map","key","sort","a","b","area","filteredAreas","filter","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","prototype","findIndex","prop","value","cur","match","obj","runModifiers","modifiers","data","ends","modifiersToRun","undefined","slice","forEach","warn","enabled","update","isDestroyed","options","positionFixed","flip","originalPlacement","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","defaultView","attachToScrollParents","event","callback","scrollParents","isBody","target","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","attributes","setAttribute","applyStyle","instance","arrowElement","arrowStyles","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","floor","round","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","querySelector","isVertical","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","validPlacements","placements","clockwise","counter","index","concat","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","escapeWithReference","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","Popper","requestAnimationFrame","debounce","bind","Defaults","jquery","onLoad","Utils","global","PopperUtils"],"mappings":"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"***REMOVED***